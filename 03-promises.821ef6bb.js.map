{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAyBE,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAnCFO,SAASC,cAAc,SAG/BC,iBAAiB,UAAWC,IAC/BA,EAAEC,iBACF,IAAIC,EAAeC,SAASH,EAAEI,cAAcC,SAASf,MAAMgB,OACvDC,EAAcJ,SAASH,EAAEI,cAAcC,SAASG,KAAKF,OACrDG,EAAgBN,SAASH,EAAEI,cAAcC,SAASK,OAAOJ,OAI7D,IAAK,IAAIK,EAAW,EAAGA,GAAYF,EAAeE,GAAY,EAE5DvB,EAAcuB,EAAUT,GACvBU,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEhEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAG9DY,GAAgBK,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form')\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault()\n  let promiseDelay = parseInt(e.currentTarget.elements.delay.value);\n  let promiseStep = parseInt(e.currentTarget.elements.step.value);\n  let promiseAmount = parseInt(e.currentTarget.elements.amount.value);\n\n  \n  \n  for (let position = 1; position <= promiseAmount; position += 1) {\n    \n    createPromise(position, promiseDelay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n    promiseDelay += promiseStep;\n  }\n  })\n\n  function createPromise(position, delay) {\n    \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay})\n        } else {\n          reject({position, delay})\n        }\n      }, delay)\n    }\n  )}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","promiseDelay","parseInt","currentTarget","elements","value","promiseStep","step","promiseAmount","amount","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.821ef6bb.js.map"}